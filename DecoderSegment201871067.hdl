CHIP DecoderSegment201871067{
    IN A,B,C,D;
    OUT a;

    PARTS:
    Not(in=A,out=notA);
    Not(in=B,out=notB);
    Not(in=C,out=notC);
    Not(in=D,out=notD);

    And(a=notA,b=notB,out=put1);
    And(a=notC,b=put1,out=put2);
    And(a=notD,b=put2,out=secret1);

    And(a=notA,b=notB,out=put3);
    And(a=C,b=put3,out=put4);
    And(a=notD,b=put4,out=secret2);

    And(a=notA,b=notB,out=put5);
    And(a=C,b=put5,out=put6);
    And(a=notD,b=D,out=secret3);

    And(a=notA,b=B,out=put7);
    And(a=notC,b=put7,out=put8);
    And(a=D,b=put8,out=secret4);

    And(a=notA,b=B,out=put9);
    And(a=C,b=put9,out=put10);
    And(a=notD,b=put10,out=secret5);

    And(a=A,b=notB,out=put11);
    And(a=notC,b=put11,out=put12);
    And(a=notD,b=put12,out=secret6);

    And(a=A,b=notB,out=put13);
    And(a=C,b=put13,out=put14);
    And(a=D,b=put14,out=secret7);

    And(a=A,b=B,out=put15);
    And(a=notC,b=put15,out=put16);
    And(a=notD,b=put16,out=secret8);

    And(a=A,b=B,out=put17);
    And(a=notC,b=put17,out=put18);
    And(a=D,b=put18,out=secret9);

    And(a=A,b=B,out=put19);
    And(a=C,b=put19,out=put20);
    And(a=notD,b=put20,out=secret10);

    Or(a=secret1,b=secret2,out=final1);
    Or(a=secret3,b=secret4,out=final2)；
    Or(a=secret5,b=secret6,out=final3)；
    Or(a=secret7,b=secret8,out=final4)；
    Or(a=secret9,b=secret10,out=final5)；

    Or(a=final1,b=final2,out=stem1);
    Or(a=final3,b=stem1,out=stem2);
    Or(a=final4,b=stem2,out=stem3);
    Or(a=final5,b=stem3,out=a);
}