CHIP DecoderSegment201871067{
    IN A,B,C,D;
    OUT a;

    PARTS:
    Not(in=A,out=notA);
    Not(in=B,out=notB);
    Not(in=C,out=notC);
    Not(in=D,out=notD);

    And(a=notA,b=notB,out=put1);
    And(a=notC,b=put1,out=put2);
    And(a=notD,b=put2,out=secret1);

    And(a=notA,b=notB,out=put3);
    And(a=C,b=put3,out=put4);
    And(a=notD,b=put4,out=secret2);

    And(a=notA,b=notB,out=put5);
    And(a=C,b=put5,out=put6);
    And(a=D,b=put6,out=secret3);

    And(a=notA,b=B,out=put7);
    And(a=notC,b=put7,out=put8);
    And(a=D,b=put8,out=secret4);

    And(a=notA,b=B,out=put9);
    And(a=C,b=put9,out=put10);
    And(a=notD,b=put10,out=secret5);

    And(a=A,b=notB,out=put11);
    And(a=notC,b=put11,out=put12);
    And(a=notD,b=put12,out=secret6);

    And(a=A,b=notB,out=lily1);
    And(a=notC,b=lily1,out=lily2);
    And(a=D,b=lily2,out=secret7); 
    
    And(a=A,b=notB,out=put13);
    And(a=C,b=put13,out=put14);
    And(a=D,b=put14,out=secret8);

    And(a=A,b=B,out=put15);
    And(a=notC,b=put15,out=put16);
    And(a=notD,b=put16,out=secret9);

    And(a=A,b=B,out=put17);
    And(a=notC,b=put17,out=put18);
    And(a=D,b=put18,out=secret10);

    And(a=A,b=B,out=put19);
    And(a=C,b=put19,out=put20);
    And(a=notD,b=put20,out=secret11);

    Or(a=secret1,b=secret2,out=final1);
    Or(a=secret3,b=final1,out=final2);
    Or(a=secret4,b=final2,out=final3);
    Or(a=secret5,b=final3,out=final4);
    Or(a=secret6,b=final4,out=final5);
    Or(a=secret7,b=final5,out=final6);
    Or(a=secret8,b=final6,out=final7);
    Or(a=secret9,b=final7,out=final8);
    Or(a=secret10,b=final8,out=final9);
    Or(a=secret11,b=final9,out=final10);

    Or(a=final1,b=final2,out=stem1);
    Or(a=final3,b=final4,out=stem2);
    Or(a=final5,b=final6,out=stem3);
    Or(a=final7,b=final8,out=stem4);
    Or(a=final9,b=final10,out=a);
}

CHIP DecoderSegment201871067{
    IN A,B,C,D;
    OUT c;
    
    PARTS:
    Not(in=A,out=notA);
    Not(in=B,out=notB);
    Not(in=C,out=notC);
    Not(in=D,out=notD);

    And(a=notA,b=notB,out=apple1);
    And(a=notC,b=apple1,out=apple2);
    And(a=notD,b=apple2,out=orrange1);

    And(a=notA,b=B,out=apple3);
    And(a=notC,b=apple3,out=apple4);
    And(a=notD,b=apple2,out=orrange2);

    And(a=notA,b=B,out=apple5);
    And(a=notC,b=apple5,out=apple6);
    And(a=D,b=apple6,out=orrarnge3);

    And(a=notA,b=B,out=apple7);
    And(a=C,b=apple7,out=apple8);
    And(a=notD,b=apple8,out=orrange4);

    And(a=A,b=notB,out=apple9);
    And(a=notC,b=apple9,out=apple10);
    And(a=notD,b=apple10,out=orrange5);

    And(a=A,b=notB,out=apple11);
    And(a=notC,b=apple11,out=apple12);
    And(a=D,b=apple12,out=orrange6);

    And(a=A,b=notB,out=apple13);
    And(a=C,b=apple13,out=apple14);
    And(a=notD,b=apple14,out=orrarnge7);

    And(a=A,b=notB,out=apple15);
    And(a=C,b=apple15,out=apple16);
    And(a=D,b=apple16,out=orrange8);

    And(a=A,b=B,out=apple17);
    And(a=notC,b=apple17,out=apple18);
    And(a=notD,b=apple18,out=orrange9);

    And(a=A,b=B,out=apple19);
    And(a=C,b=apple19,out=apple20);
    And(a=notD,b=apple20,out=orrange10);

    And(a=A,b=B,out=apple21);
    And(a=C,b=apple21,out=apple22);
    And(a=notD,b=apple22,out=orrange11);

    Or(a=orrange1,b=orrange2,out=juice1);
    Or(a=orrange3,b=juice1,out=juice2);
    Or(a=orrange4,b=juice2,out=juice3);
    Or(a=orrange5,b=juice3,out=juice4);
    Or(a=orrange6,b=juice4,out=juice5);
    Or(a=orrange7,b=juice5,out=juice6);
    Or(a=orrange8,b=juice6,out=juice7);
    Or(a=orrange9,b=juice7,out=juice8);
    Or(a=orrange10,b=juice8,out=juice9);
    Or(a=orrange11,b=juice9,out=juice10);
    
    Or(a=juice1,b=juice2,out=burry1);
    Or(a=juice3,b=juice4,out=burry2);
    Or(a=juice5,b=juice6,out=burry3);
    Or(a=juice7,b=juice8,out=burry4);
    Or(a=juice9,b=juice10,out=c);




}


CHIP DecoderSegment201871067{
    IN A,B,C,D;
    OUT g;

PARTS:
    Not(in=A,out=notA);
    Not(in=B,out=notB);
    Not(in=C,out=notC);
    Not(in=D,out=notD);

    And(a=notA,b=notB,out=black1);
    And(a=notC,b=black1,out=black2);
    And(a=notD,b=black2,out=pink1);

    And(a=notA,b=notB,out=black3);
    And(a=C,b=black3,out=black4);
    And(a=notD,b=black4,out=pink2);

    And(a=notA,b=B,out=black5);
    And(a=C,b=black5,out=black6);
    And(a=notD,b=black6,out=pink3);

    And(a=A,b=notB,out=black7);
    And(a=notC,b=black7,out=black8);
    And(a=notD,b=black8,out=pink4);

    And(a=A,b=notB,out=black9);
    And(a=C,b=black9,out=black10);
    And(a=notD,b=black10,out=pink5);

    And(a=A,b=notB,out=black11);
    And(a=C,b=black11,out=black12);
    And(a=D,b=black12,out=pink6);

    And(a=A,b=B,out=black13);
    And(a=notC,b=black13,out=black14);
    And(a=notD,b=black14,out=pink7);

    And(a=A,b=B,out=black15);
    And(a=notC,b=black15,out=black16);
    And(a=notD,b=black16,out=pink8);

    And(a=A,b=B,out=black17);
    And(a=C,b=black17,out=black18);
    And(a=notD,b=black18,out=pink9);

    And(a=A,b=B,out=black19);
    And(a=C,b=black19,out=black20);
    And(a=D,b=black20,out=pink10);

    Or(a=pink1,b=pink2,out=white1);
    Or(a=pink3,b=pink4,out=white2);
    Or(a=pink5,b=pink6,out=white3);
    Or(a=pink7,b=pink8,out=white4);
    Or(a=pink9,b=pink10,out=white5);

    Or(a=white1,b=white2,out=yellow1);
    Or(a=white3,b=white4,out=yellow2);
    Or(a=white5,b=yellow2,out=g);
    







}